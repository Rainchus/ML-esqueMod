%battleStatus = 0x800DC070;
%0x1A7 battleStatus->battlePhase

%800DC068 somehow very important

%800DC074 0x00000002 flag is if mario has gone this turn
%800DC074 0x00000004 flag is if partner has gone this turn
%800DC1E0 s8 current enemy turn
%800DC1E1 s8 number of enemy actors

%802472F4 - load enemy index to attack (change value to change enemy attacking)



%80242100 - code start ally turn

%80247248 code - partner sets used turn flag
%80246980 code - mario sets used turn flag

%802476D0 code - load next take turn script from enemies
%80247388 store next actor's take turn script
%80247320 code - load actor halfword? (3 paragoombas, 0x0200, 0x0201, 0x0202)

%802430D8 code - enemy set flag

% 800DC074: 00014020
% 800DC070: 00000129
% 800DC068: 00000009

/%
typedef struct PartnerData {
    /* 0x00 */ u8 enabled;
    /* 0x01 */ s8 level;
    /* 0x02 */ s16 currentHp;
    /* 0x04 */ s16 maxHP;
    /* 0x06 */ s16 speed;
} PartnerData; // size = 0x08
%/

/% NEW LIST OF HOOKS:
btl_delete_actor - 80240BBC (hook at end, 80240D50)

btl_state_update_switch_to_player - 80242AC8 (hook in middle, 80241B70) [start of mario turn]
btl_state_update_switch_to_partner - 80242F00 [start of partner turn]
btl_state_update_enemy_move - 80247570 [start of enemy turn]
802475CC - jump table location for starting each enemy turn

%/

%802475CC
%80247720
/%

#new:Function $updateTurnIndex {
    LIO t0, $CurrentActorTurnIndex
    LW t1, 0000 (t0) %load current actor turn index
    ADDIU t1, t1, 1
    LIO t4, 800DC1E1
    LB t2, 0000 (t4)
    ADDIU t2, t2, 2 %2 because mario + partner and one value is an index one is not
    SLT t3, t1, t2
    BEQL t3, r0, .setBackTo0
    DADDU t1, r0, r0
    .setBackTo0
    SW t1, 0000 (t0)
    %update turn counter
    LAW t0, $TurnCounter
    ADDIU t0, t0, 1
    SAW t0, $TurnCounter
    JR RA
    NOP
}

#new:Function $redirectTurn {
    ORI t1, r0, 1
    SAW t1, $hasChangedTurnBool
    LAW t0, $CurrentActorTurnIndex
    LIO v0, $SpeedList
    LAW v1, $CurrentActorTurnIndex
    SLL v1, v1, 3 %multiply by sizeof entry in SpeedList
    ADDU v1, v0, v1
    LB v1, 0006 (v1) %load actor index
    ADDIU t0, r0, FFFF
    BEQ t0, v1, .isPlayer
    NOP
    ADDIU t0, r0, FFFE
    BEQ t0, v1, .isPartner
    NOP
    %is an enemy, set the enemy index and also addr 0x800DC074 to 0x00000026
    ADDIU v1, v1, FFFF %subtract one from current enemy index
    SAB v1, 800DC1E0 %set current enemy index
    LIO t0, 00000026
    SAW t0, 800DC074 %set to enemy turn
    BEQ r0, r0, .exit
    NOP

    .isPlayer
    LIO t0, 00000024
    SAW t0, 800DC074 %set to Mario turn
    BEQ r0, r0, .exit
    NOP

    .isPartner
    LIO t0, 00000022
    SAW t0, 800DC074 %set to partner turn
    BEQ r0, r0, .exit
    NOP
    .exit
    JR RA
    NOP
}

@Hook:Battle 80242AC8 { %btl_state_update_switch_to_player hook
    PUSH ra

    LAW t0, $hasChangedTurnBool %check to see if we have redirected the current actor turn already
    BEQ t0, r0, .redirectTurn
    NOP
    %otherwise turn already redirected here, run mario turn
    SAW r0, $hasChangedTurnBool
    JAL $updateTurnIndex
    NOP
    BEQ r0, r0, .exit
    NOP
    .redirectTurn
    JAL $redirectTurn
    NOP

    .exit
    POP ra

    ADDIU sp, sp, -20 %restore from hook
    J 80242AD0
    SW s0, 0010 (sp) %restore from hook
}

@Hook:Battle 80242F00 { %btl_state_update_switch_to_partner
    PUSH ra

    LAW t0, $hasChangedTurnBool %check to see if we have redirected the current actor turn already
    BEQ t0, r0, .redirectTurn
    NOP
    %otherwise turn already redirected here, run parnter turn
    SAW r0, $hasChangedTurnBool
    JAL $updateTurnIndex
    NOP
    BEQ r0, r0, .exit
    NOP
    .redirectTurn
    JAL $redirectTurn
    NOP

    .exit
    POP ra 

    ADDIU sp, sp, -20 %restore from hook
    J 80242F08
    SW s0, 0010 (sp) %restore from hook

}

#new:Data $EnemyRedirectCount {
    0
}

@Hook:Battle 802475CC { %hook beginning of enemy turn
    PUSH[40] ra

    LAW t0, $hasChangedTurnBool %check to see if we have redirected the current actor turn already
    BEQ t0, r0, .redirectTurn
    NOP
    %otherwise turn already redirected here, run enemy turn




    LAW t0, $CurrentActorTurnIndex
    LIO v0, $SpeedList
    SLL t1, t0, 3 %multiply actor turn index by 8
    ADDU t1, t1, v0 %points to current actor in SpeedList
    LB t3, 0006 (t1) %load current actor ID
    ADDIU t2, r0, FFFF
    BEQ t2, t3, .isPlayer
    NOP

    ADDIU t2, r0, FFFE
    BEQ t2, t1, .isPartner
    NOP

    %otherwise, is enemy
    %set to correct enemy for next iteration
    LAB t4, 800DC1E0
    BEQ t3, t4, .isCurrentEnemyTurn
    NOP
    %set up for isCurrentEnemyTurn
    ADDIU t3, t3, FFFF
    SAB t3, 800DC1E0 %should now be ready for next enemy iteration

    .isPlayer
    ORI a0, r0, 000A
    SAB a0, 800DC217
    BEQ r0, r0, .afterPartnerOrPlayer
    NOP
    .isPartner
    ORI a0, r0, 000A
    SAB a0, 800DC217
    BEQ r0, r0, .afterPartnerOrPlayer
    NOP
    .afterPartnerOrPlayer
    LIO t0, 800DC1E0
    LB t3, 0001 (t0) %load total enemies
    SB t3, 0000 (t0) %set current enemy to last in list
    J 80247720
    NOP

    .isCurrentEnemyTurn
    JAL $updateTurnIndex
    NOP
    POP ra
    LUI a0, FFDF
    J 802475DC
    ORI a0, a0, FFFF



    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    .redirectTurn
    JAL $redirectTurn
    NOP
    POP[40] ra
    J 80247720 %dont do enemies turn
    NOP
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
}

@Function:Battle 80241B74 {
    NOP %remove instructions that flags to give mario and partner a turn
    NOP
}

@Hook:Battle 80265508 { %copy speed from actor stats struct to main actor struct
    SB v0, 01B8 (s1) %store current hp (restore from hook)
    SB v0, 01B9 (s1) %store max hp (restore from hook)
    LH v0, 000A (s4) %load speed u16
    J 80265510
    SH v0, 01BA (s1) %store speed
}

#new:Data $CurrentActorTurnIndex { %based on the speed values in $SpeedList
    0
}

#new:Data $hasChangedTurnBool { %0 used to tell if we have changed the turn order at the beginning of an enemies turn already
	0
}

#new:Data $TurnCounter {
    0
}


@Hook:Battle 80264C90 { %ran once on battle start
    %set total number of actors because we hook too early to use the game's calculation
    %copy exactly how the game does it
    LI a0, 800DC070
    DADDU t1, r0, r0 %enemy iterator to 0
    DADDU t2, r0, r0 %total enemies found to 0
    .loadActorPointer
    LW t0, 00E0 (a0)
    BEQ t0, r0, .checkIfExit
    ADDIU t1, t1, 0001 %increment if pointer is null
    ADDIU t2, t2, 0001 %total enemy count
    .checkIfExit
    SLTI v0, t1, 0018 %check if we have iterated over 24 actor pointers
    BNE v0, r0, .loadActorPointer
    ADDIU a0, a0, 0004
    SAB t2, 800DC1E1 %set actor total

    SAW r0, $CurrentActorTurnIndex
    SAW r0, $hasChangedTurnBool


	JAL $CopyActorDataToSpeedList
	NOP
	JAL $bubbleSortSpeedList
	NOP
	SAW r0, $CurrentActorTurnIndex
    ORI t0, r0, 1
    SAW t0, $TurnCounter
	LB v0, 0012 (s3)
	J 80264C98
	SLL v0, v0, 3
}

#new:Function $CopyActorDataToSpeedList {
    PUSH s0, s1, s2, s3, ra
    LIO s1, $SpeedList

    LIO s0, 800DC148
    LW a0, 0000 (s0) %load mario actor ptr
    LAH t0, 8010F2A4 %load mario speed
    ADDIU t1, r0, FFFF %-1 for mario actor
    SW a0, 0000 (s1) %store actor pointer
    SH t0, 0004 (s1) %store speed
    SB t1, 0006 (s1) %store enemy index

    ADDIU s0, s0, 4
    ADDIU s1, s1, 8
    LW a0, 0000 (s0) %load partner actor ptr
    %get partner speed value
    LIO v0, 8010F2A4 %load partner id
    LB t0, FFFE (v0) %load current partner id
    SLL t0, t0, 3 %multiply by 8
    ADDU t0, t0, v0
    LH t0, 0002 (t0) %load partner speed
    ADDIU t1, r0, FFFE %-2 for partner actor

    SW a0, 0000 (s1) %store actor pointer
    SH t0, 0004 (s1) %store speed
    SB t1, 0006 (s1) %store enemy index

    ADDIU s0, s0, 4
    ADDIU s1, s1, 8
    DADDU s3, r0, r0 %loop counter
    LABU s2, 800DC1E1 %number of enemy actors
    .loop
    BEQ s3, s2, .exit
    NOP
    LW a0, 0000 (s0) %load actor pointer
    BEQ a0, r0, .nullPtr
    NOP
    LH t0, 01BA (a0) %load actor speed
    LB t1, 01F2 (a0) %load enemy index

    SW a0, 0000 (s1) %store actor pointer
    SH t0, 0004 (s1) %store speed
    SB t1, 0006 (s1) %store enemy index
    BEQ r0, r0, .incrementLoop
    NOP

    %TODO: verify that .nullPtr check works correctly
    .nullPtr
    BEQ r0, r0, .loop
    ADDIU s0, s0, 4

    .incrementLoop
    ADDIU s0, s0, 4
    ADDIU s1, s1, 8 %increment to next struct
    BEQ r0, r0, .loop
    ADDIU s3, s3, 1 %increment for loop counter
    .exit
    POP s0, s1, s2, s3, ra
    JR RA
    NOP
}

#new:Function $bubbleSortSpeedList { %it work pog
    PUSH s0, s1, s2, s3, s4, ra
    LIO s0, $SpeedList
    LAB s1, 800DC1E1 %number of actors
    ADDIU s1, s1, 2 %total number of actors including mario and partner
    ADDIU s1, s1, FFFF %n-1 for bubble sort
    ADDU s4, s1, r0
    DADDU s3, r0, r0
    .bubbleSortInit
        LIO s0, $SpeedList
        DADDU s2, r0, r0 %loop counter

        .bubbleSort
            LH t0, 0004 (s0) %speed of current actor
            LH t1, 000C (s0) %speed of next actor
            SLT t2, t0, t1
            BNE t2, r0, .swap
            NOP
            %no swap
            .afterSwap
            ADDIU s0, s0, 8
            ADDIU s2, s2, 1 %increment loop counter
            BNE s2, s1, .bubbleSort
            NOP
            BEQ r0, r0, .endOfInnerLoop
            NOP
            .swap
            LW t0, 0000 (s0) %load actor ptr
            LH t1, 0004 (s0) %load speed
            LB t2, 0006 (s0) %load enemy index

            LW t6, 0008 (s0) %next actor ptr
            LH t7, 000C (s0) %next actor speed
            LB t8, 000E (s0) %next actor index

            %swap in SpeedList
            SW t0, 0008 (s0)
            SH t1, 000C (s0)
            SB t2, 000E (s0)

            SW t6, 0000 (s0)
            SH t7, 0004 (s0)
            SB t8, 0006 (s0)
            BEQ r0, r0, .afterSwap
            NOP
        %speedList size = numOfActors + 2
        .endOfInnerLoop
        ADDIU s3, s3, 1
        SLT t0, s3, s4
        BNE t0, r0, .bubbleSortInit
        NOP
    POP s0, s1, s2, s3, s4, ra
    JR RA
    NOP
}

#new:Data $SpeedList { %supports 24 enemy actors max, then partner + mario (26 total)
    %Actor* actor, s16 enemyIndex, s16 enemySpeed
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
    0 0
}
%/